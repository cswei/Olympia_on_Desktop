SET(PROJECT_VERSION_MAJOR 0)
SET(PROJECT_VERSION_MINOR 1)
SET(PROJECT_VERSION ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR})

SET(DATA_DIR ${CMAKE_INSTALL_PREFIX}/share/${PROJECT_NAME}-${PROJECT_VERSION})

ADD_DEFINITIONS(-DDATA_DIR="${DATA_DIR}")

#SET(WTF_PLATFORM_OLYMPIA 1)

#ADD_DEFINITIONS(-DWTF_PLATFORM_OLYMPIA=1)
ADD_DEFINITIONS(-DBUILDING_OLYMPIA__)
ADD_DEFINITIONS(-DJS_NO_EXPORT=1)

SET(CMAKE_BUILD_TYPE Release)
SET(CMAKE_CXX_FLAGS_RELEASE "-O0 -DNDEBUG")

IF (CMAKE_SYSTEM_NAME MATCHES "Linux")
    add_definitions(-DOLYMPIA_LINUX=1)
ELSEIF (CMAKE_SYSTEM_NAME MATCHES "Windows")
    add_definitions(-DOLYMPIA_WINDOWS=1)
ELSEIF (CMAKE_SYSTEM_NAME MATCHES "Darwin")
    add_definitions(-DOLYMPIA_MAC=1)
    set(CMAKE_EXE_LINKER_FLAGS "-mstackrealign")
ELSE ()
    MESSAGE(FATAL_ERROR "Unknown OS '${CMAKE_SYSTEM_NAME}'")
ENDIF ()

ADD_DEFINITIONS(-DJS_BLOCK_TOTAL_SIZE=2097152)



SET(WTF_USE_PTHREADS 1)

ADD_DEFINITIONS(-DWTF_USE_PTHREADS=1)

# FIXME: Set this as an optional component of the build; BlackBerry WebKit does not use this
SET(JSC_EXECUTABLE_NAME jsc)

SET(WTF_LIBRARY_NAME wtf)
SET(JavaScriptCore_LIBRARY_NAME javascriptcore)
SET(WebCore_LIBRARY_NAME webcore)
SET(WebKit_LIBRARY_NAME webkit)

SET(WTF_LIBRARY_TYPE STATIC)
SET(JavaScriptCore_LIBRARY_TYPE STATIC)
SET(WebCore_LIBRARY_TYPE STATIC)
SET(WebKit_LIBRARY_TYPE SHARED)

# FIXME: Remove this completely
SET(OLYMPIA_LINK_FLAGS "--no_eager_load_debug")

# FIXME: Need to set CFLAGS on a CPU-specific basis
#SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} --no-exceptions --apcs=/interwork --fpmode=ieee_no_fenv --no_parse_templates --gnu --cpu xscale --enum_is_int --no_rtti -O2 -OTime " CACHE INTERNAL "C flags" FORCE)
#SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} --no-exceptions --apcs=/interwork --fpmode=ieee_no_fenv --no_parse_templates --gnu --cpu xscale --enum_is_int --no_rtti -O2 -OTime " CACHE INTERNAL "C++ flags" FORCE)

# FIXME: Some better way of finding the RVCT include directory
ADD_DEFINITIONS(-DSYSTEMINCLUDE=${RVCT_DIR}/include)

# FIXME: Use FindBBNSL.cmake and FindOSNDK.cmake
INCLUDE_DIRECTORIES($ENV{OSNDKDIR}/inc)
INCLUDE_DIRECTORIES($ENV{OSNDKDIR}/inc/graphics)
INCLUDE_DIRECTORIES($ENV{OSNDKDIR}/inc/internal)
INCLUDE_DIRECTORIES($ENV{BBNSLINSTALLPREFIX}/include)
INCLUDE_DIRECTORIES($ENV{BBNSLINSTALLPREFIX}/include/jpeg)
INCLUDE_DIRECTORIES($ENV{BBNSLINSTALLPREFIX}/include/libpng)
INCLUDE_DIRECTORIES($ENV{BBNSLINSTALLPREFIX}/include/libxml2)
INCLUDE_DIRECTORIES($ENV{BBNSLINSTALLPREFIX}/include/libxslt)
INCLUDE_DIRECTORIES($ENV{BBNSLINSTALLPREFIX}/include/tid)
INCLUDE_DIRECTORIES($ENV{BBNSLINSTALLPREFIX}/include/zlib)
INCLUDE_DIRECTORIES($ENV{BBNSLINSTALLPREFIX}/include/webkitplatform)
INCLUDE_DIRECTORIES($ENV{BBNSLINSTALLPREFIX}/include/posix)
INCLUDE_DIRECTORIES($ENV{BBNSLINSTALLPREFIX}/include/sqlite)
INCLUDE_DIRECTORIES($ENV{BBNSLINSTALLPREFIX}/include/slipstream/libimage/public/cpp/include/common)
INCLUDE_DIRECTORIES($ENV{BBNSLINSTALLPREFIX}/include/slipstream/libimage/public/cpp/include/rxi)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/../webkitsupport/blackberry)

IF (CMAKE_SYSTEM_NAME MATCHES "Windows")
    MESSAGE(STATUS " --------    this is windows system ---------")
    set(CMAKE_PREFIX_PATH
        ${CMAKE_PREFIX_PATH}
        ${CMAKE_SOURCE_DIR}/../webkitsupport/windows/zlib
        ${CMAKE_SOURCE_DIR}/../webkitsupport/windows/jpeg
        ${CMAKE_SOURCE_DIR}/../webkitsupport/windows/png
        ${CMAKE_SOURCE_DIR}/../webkitsupport/windows/icu
        ${CMAKE_SOURCE_DIR}/../webkitsupport/windows/sqlite3
        ${CMAKE_SOURCE_DIR}/../webkitsupport/windows/freetype
        ${CMAKE_SOURCE_DIR}/../webkitsupport/windows/pthread
        ${CMAKE_SOURCE_DIR}/../webkitsupport/windows/libxml2
    )
    INCLUDE_DIRECTORIES("${JAVASCRIPTCORE_DIR}/os-win32")
    INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/../webkitsupport/egl/include)
    INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/../webkitsupport/egl/include/EGL)
    INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/../webkitsupport/windows/openvg/include)
    INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/../webkitsupport/windows/openvg/include/VG)
    INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/../webkitsupport/windows/posix/)
    INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/../webkitsupport/windows/pthread/include)
    INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/../webkitsupport/windows/libxml/include)
    INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/../webkitsupport/windows/jpeg/include)
    INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/../webkitsupport/windows/png/include)
    INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/../webkitsupport/windows/zlib/include)
    INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/../webkitsupport/windows/sqlite3/include)
    INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/../webkitsupport/windows/libxml2/include)
    INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/../webkitsupport/windows/iconv/include)
    INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/../webkitsupport/windows/freetype/include)
    SET(CXX_WARNING_LEVEL 0)
    SET(CMAKE_CXX_FLAGS " /Zm1000 /EHsc /GR /W0 /MP8 /DOLYMPIA_WINDOWS")
    MESSAGE(STATUS "JavaScriptCore_INCLUDE_DIRECTORIES" "${JavaScriptCore_INCLUDE_DIRECTORIES}")
    MESSAGE(STATUS "CMAKE_CXX_FLAGS = ${CMAKE_CXX_FLAGS}")
    set(VG_DIR ${CMAKE_SOURCE_DIR}/../webkitsupport/windows/openvg)
ELSEIF (CMAKE_SYSTEM_NAME MATCHES "Linux")
    set(VG_DIR ${CMAKE_SOURCE_DIR}/../webkitsupport/linux/openvg)
ELSEIF (CMAKE_SYSTEM_NAME MATCHES "Darwin")
    set(VG_DIR ${CMAKE_SOURCE_DIR}/../webkitsupport/macx/openvg)
ELSE()
    #SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g")
    MESSAGE(STATUS "CMAKE_CXX_FLAGS = ${CMAKE_CXX_FLAGS}")
ENDIF()

set(EGL_DIR ${CMAKE_SOURCE_DIR}/../webkitsupport/egl)

if (${CMAKE_SYSTEM_PROCESSOR} MATCHES "x86_64")
    set(VG_LIB_NAME AmanithVG_SRE64)
else ()
    set(VG_LIB_NAME AmanithVG_SRE)
endif ()

WEBKIT_FEATURE(ENABLE_AS_IMAGE "Enable SVG as image" DEFAULT ON SVG)
WEBKIT_FEATURE(ENABLE_BLOB_SLICE "Enable blob slice" DEFAULT OFF)
WEBKIT_FEATURE(ENABLE_CHANNEL_MESSAGING "Enable channel messaging" DEFAULT ON)
WEBKIT_FEATURE(ENABLE_DATABASE "Enable database" DEFAULT ON)
WEBKIT_FEATURE(ENABLE_DATAGRID "Enable datagrid" DEFAULT OFF)
WEBKIT_FEATURE(ENABLE_DATALIST "Enable datalist" DEFAULT ON HTML)
WEBKIT_FEATURE(ENABLE_DOM_STORAGE "Enable DOM storage" DEFAULT ON)
WEBKIT_FEATURE(ENABLE_EVENTSOURCE "Enable event source" DEFAULT ON)
WEBKIT_FEATURE(ENABLE_FAST_MOBILE_SCROLLING "Enable fast mobile scrolling" DEFAULT ON)
WEBKIT_FEATURE(ENABLE_FILTERS "Enable SVG filters" DEFAULT ON SVG)
WEBKIT_FEATURE(ENABLE_GEOLOCATION "Enable geolocation" DEFAULT ON)
WEBKIT_FEATURE(ENABLE_GLIB_SUPPORT "Enable Glib support" DEFAULT ON)
WEBKIT_FEATURE(ENABLE_ICONDATABASE "Enable icon database" DEFAULT ON)
WEBKIT_FEATURE(ENABLE_IMAGE_DECODER_DOWN_SAMPLING "Enable image decoder down sampling" DEFAULT ON)
WEBKIT_FEATURE(ENABLE_INSPECTOR "Enable inspector" DEFAULT OFF)
WEBKIT_FEATURE(ENABLE_JAVASCRIPT_DEBUGGER "Enable JavaScript debugger" DEFAULT ON)
WEBKIT_FEATURE(ENABLE_JIT "Enable JIT" DEFAULT OFF)
WEBKIT_FEATURE(ENABLE_MATHML "Enable MathML" DEFAULT OFF)
WEBKIT_FEATURE(ENABLE_NETSCAPE_PLUGIN_API "Enable Netscape plugin API" DEFAULT OFF)
WEBKIT_FEATURE(ENABLE_NOTIFICATIONS "Enable notifications" DEFAULT OFF)
WEBKIT_FEATURE(ENABLE_OFFLINE_WEB_APPLICATIONS "Enable offline web applications" DEFAULT ON)
WEBKIT_FEATURE(ENABLE_ORIENTATION_EVENTS "Enable orientation events" DEFAULT OFF)
WEBKIT_FEATURE(ENABLE_PROGRESS_TAG "Enable progress tag" DEFAULT OFF)
WEBKIT_FEATURE(ENABLE_RUBY "Enable Ruby" DEFAULT OFF HTML)
WEBKIT_FEATURE(ENABLE_SANDBOX "Enable Sandbox" DEFAULT OFF HTML)
WEBKIT_FEATURE(ENABLE_SHARED_WORKERS "Enable shared workers" DEFAULT ON)
WEBKIT_FEATURE(ENABLE_SVG "Enable SVG" DEFAULT OFF)
WEBKIT_FEATURE(ENABLE_SVG_ANIMATION "Enable SVG animation" DEFAULT OFF SVG)
WEBKIT_FEATURE(ENABLE_SVG_FONTS "Enable SVG fonts" DEFAULT OFF SVG)
WEBKIT_FEATURE(ENABLE_SVG_FOREIGN_OBJECT "Enable SVG foreign object" DEFAULT OFF SVG)
WEBKIT_FEATURE(ENABLE_SVG_USE "Enable SVG use" DEFAULT OFF SVG)
WEBKIT_FEATURE(ENABLE_VIDEO "Enable video" DEFAULT OFF HTML)
WEBKIT_FEATURE(ENABLE_WEB_SOCKETS "Enable web sockets" DEFAULT OFF)
WEBKIT_FEATURE(ENABLE_WML "Enable WML" DEFAULT OFF)
WEBKIT_FEATURE(ENABLE_WORKERS "Enable workers" DEFAULT ON)
WEBKIT_FEATURE(ENABLE_XHTMLMP "Enable XHTMLMP" DEFAULT OFF)
WEBKIT_FEATURE(ENABLE_XPATH "Enable XPath" DEFAULT ON)
WEBKIT_FEATURE(ENABLE_XSLT "Enable XSLT" DEFAULT OFF)
WEBKIT_FEATURE(ENABLE_VIEWPORT_REFLOW "Enable Viewport reflow" DEFAULT ON)

LINK_DIRECTORIES(${CMAKE_BINARY_DIR}/JavaScriptCore ${CMAKE_BINARY_DIR}/WebCore)

